name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  HARBOR_REGISTRY: 34.32.141.92:30083
  HARBOR_PROJECT: javdes
  IMAGE_NAME: bankapp

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Run tests
      run: ./mvnw clean test
      
    - name: Build application
      run: ./mvnw clean package -DskipTests
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jar-artifact
        path: target/*.jar

  build-and-push-image:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    outputs:
      image-tag: ${{ steps.image-tag.outputs.tag }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: jar-artifact
        path: target/
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        config-inline: |
          [registry."34.32.141.92:30083"]
            http = true
            insecure = true
            
    - name: Configure Docker for insecure registry
      run: |
        sudo mkdir -p /etc/docker
        echo '{"insecure-registries":["34.32.141.92:30083"]}' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker || true
        sleep 10
        
    - name: Test Docker configuration
      run: |
        docker info | grep -A 5 "Insecure Registries" || echo "Insecure registries not shown"
        docker version
      
    - name: Generate image tag
      id: image-tag
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "tag=prod-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        else
          echo "tag=dev-${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
        fi
        
    - name: Login to Harbor
      run: |
        echo "Harbor12345" | docker login 34.32.141.92:30083 -u admin --password-stdin
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.IMAGE_NAME }}:${{ steps.image-tag.outputs.tag }}
          ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout manifests repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/app-fatih-manifests
        token: ${{ secrets.GITHUB_TOKEN }}
        path: manifests
        
    - name: Update image tag in manifests
      run: |
        cd manifests
        NAMESPACE=""
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          NAMESPACE="prod"
        else
          NAMESPACE="dev"
        fi
        
        # Update the image tag in the appropriate overlay
        sed -i "s|image: .*bankapp:.*|image: ${{ env.HARBOR_REGISTRY }}/${{ env.HARBOR_PROJECT }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-push-image.outputs.image-tag }}|g" \
          k8s-manifests/app/overlays/${NAMESPACE}/deployment.yaml
          
    - name: Commit and push changes
      run: |
        cd manifests
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update image to ${{ needs.build-and-push-image.outputs.image-tag }}" || exit 0
        git push
